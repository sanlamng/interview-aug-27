{"version":3,"sources":["assets/svg/icon-moon.svg","assets/svg/icon-sun.svg","helpers/AuthContext.js","Header.js","GoToTop.js","assets/svg/icon-plus.svg","Form.js","Columns/ColumnFilter.js","Columns/Products.js","Columns/Checkbox.js","ProductsTable.js","Transactions.js","UserLogin.js","UserValidation.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","Header","handleMode","setShowProfile","showProfile","useState","switchModeImg","setSwitchModeImg","setAuthState","useContext","className","src","localStorage","getItem","Sun","Moon","alt","onClick","document","body","classList","contains","setItem","clear","GoToTop","routePath","useLocation","useEffect","window","scrollTo","Form","showForm","handleShowForm","getProducts","CustomerName","DOB","Phone","Product","Amount","PaymentDate","newInvoice","setNewInvoice","fillInput","handleOnChange","e","name","target","value","newTrans","a","fetch","method","headers","Accept","accessToken","JSON","stringify","then","res","json","id","htmlFor","type","onChange","autoComplete","form","preventDefault","setTimeout","handleSubmit","ColumnFilter","column","filterValue","setFilter","PRODUCTS","Footer","accessor","disableFilters","Cell","moment","Date","format","Checkbox","React","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","current","ProductsTable","props","returnedProducts","setReturnedProducts","allProducts","console","log","columns","useMemo","data","defaultColumn","Filter","useTable","useFilters","useGlobalFilter","usePagination","useRowSelect","hooks","visibleColumns","push","getToggleAllRowsSelectedProps","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","headerGroups","prepareRow","state","gotoPage","setGlobalFilter","pageCount","setPageSize","pageIndex","selectedFlatRows","globalFilter","pageSize","map","headerGroup","getHeaderGroupProps","getHeaderProps","render","getRowProps","cells","cell","getCellProps","original","TransId","length","defaultValue","pageNumber","Number","style","width","disabled","Transactions","setShowForm","isExpanded","setIsExpanded","deleteID","setDeleteID","isPdf","setIsPdf","componentRef","handlePrint","useReactToPrint","content","plus","product","find","item","location","reload","table","filename","sheet","buttonText","UserLogin","setReturnedData","isLoggingIn","setIsLoggingIn","fieldErr","setFieldErr","Email","SignOnName","UserPassword","userLogin","setUserLogin","history","useHistory","handleChange","prevState","newLogin","newData","error","color","height","to","UserValidation","passErr","setPassErr","emailErr","setEmailErr","confirmPassword","setConfirmPassword","isRegistering","setIsRegistering","FirstName","LastName","userValidation","setUserValidation","parseInt","newUser","onBlur","includes","App","toggleMode","setToggleMode","signIn","setSignIn","authState","add","remove","Provider","toggle","TransitionGroup","CSSTransition","timeout","classNames","exact","path","children","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3b6b9b0d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-moon.7101c57d.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.f3da52d1.svg\";","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(\"\");\r\n","import React, { useState, useContext } from \"react\";\nimport Moon from \"./assets/svg/icon-moon.svg\";\nimport Sun from \"./assets/svg/icon-sun.svg\";\nimport { AuthContext } from \"./helpers/AuthContext\";\nimport { BiLogOut } from \"react-icons/bi\";\n\nexport const Header = ({ handleMode, setShowProfile, showProfile }) => {\n  const [switchModeImg, setSwitchModeImg] = useState(false);\n  const { setAuthState } = useContext(AuthContext);\n\n  return (\n    <header>\n      <h3>FINANCE APP</h3>\n      <div className=\"btns-container\">\n        <img\n          src={localStorage.getItem(\"toggle\") === \"enabled\" ? Sun : Moon}\n          alt=\"moon\"\n          className=\"toggleMode\"\n          onClick={() => {\n            handleMode();\n            document.body.classList.contains(\"dark-mode\")\n              ? localStorage.setItem(\"toggle\", \"enabled\")\n              : localStorage.setItem(\"toggle\", \"disabled\");\n            setSwitchModeImg(!switchModeImg);\n          }}\n        />\n        <BiLogOut\n          className=\"btn-logout\"\n          onClick={() => {\n            setAuthState(false);\n            localStorage.clear(\"accessToken\");\n          }}\n        />\n      </div>\n    </header>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const GoToTop = () => {\n  const routePath = useLocation();\n  const onTop = () => {\n    window.scrollTo(0, 0);\n  };\n  useEffect(() => {\n    onTop();\n  }, [routePath]);\n  return null;\n};\n","export default __webpack_public_path__ + \"static/media/icon-plus.278c048a.svg\";","import React, { useState } from \"react\";\nimport { FiAlertCircle } from \"react-icons/fi\";\nexport const Form = ({ showForm, handleShowForm, getProducts }) => {\n  const [newInvoice, setNewInvoice] = useState({\n    CustomerName: \"\",\n    DOB: \"\",\n    Phone: \"\",\n    Product: \"\",\n    Amount: \"\",\n    PaymentDate: \"\",\n  });\n  const [fillInput, setFillInput] = useState(false);\n\n  const handleOnChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setNewInvoice({ ...newInvoice, [name]: value });\n  };\n  const newTrans = async () => {\n    await fetch(\"/create/create-product\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Accept: \"application/json\",\n        accessToken: localStorage.getItem(\"accessToken\"),\n      },\n      body: JSON.stringify({\n        ...newInvoice,\n      }),\n    }).then((res) => res.json());\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    newTrans();\n    handleShowForm();\n    setTimeout(() => {\n      getProducts();\n    }, 1000);\n  };\n  return (\n    <section\n      className={\n        showForm ? \"invoices-form show-invoices-form\" : \"invoices-form\"\n      }\n    >\n      <div className=\"form-header-container\">\n        <div className=\"invoices-form-header\">\n          <h1>Create Transaction</h1>\n        </div>\n        {fillInput && (\n          <div className=\"fill-error-alert\">\n            <p>\n              <FiAlertCircle />\n              All fields must be filled\n            </p>\n          </div>\n        )}\n      </div>\n      <form className=\"invoice-form\" id=\"invoice-form\">\n        <div className=\"form-bill-from\">\n          <h5>Transaction Information</h5>\n          <div className=\"input full-input\">\n            <label htmlFor=\"senderStreet\"> Customer Name</label>\n            <input\n              type=\"text\"\n              id=\"senderStreet\"\n              name=\"CustomerName\"\n              value={newInvoice.CustomerName}\n              onChange={handleOnChange}\n              autoComplete=\"off\"\n            />\n          </div>\n          <div className=\"form-city-container\">\n            <div className=\"input city-input\">\n              <label htmlFor=\"senderCity\"> Date Of Birth</label>\n              <input\n                type=\"date\"\n                id=\"senderCity\"\n                name=\"DOB\"\n                value={newInvoice.DOB}\n                onChange={handleOnChange}\n                autoComplete=\"off\"\n              />\n            </div>\n            <div className=\"input post-code-input\">\n              <label htmlFor=\"senderPostCode\"> Phone</label>\n              <input\n                type=\"text\"\n                id=\"senderPostCode\"\n                name=\"Phone\"\n                value={newInvoice.Phone}\n                onChange={handleOnChange}\n                autoComplete=\"off\"\n              />\n            </div>\n          </div>\n          <div className=\"input full-input\">\n            <label htmlFor=\"senderCountry\"> Product</label>\n            <input\n              type=\"text\"\n              id=\"senderCountry\"\n              name=\"Product\"\n              value={newInvoice.Product}\n              onChange={handleOnChange}\n              autoComplete=\"off\"\n            />\n          </div>\n          <div className=\"input full-input\">\n            <label htmlFor=\"senderCountry\"> Amount</label>\n            <input\n              type=\"text\"\n              id=\"senderCountry\"\n              name=\"Amount\"\n              value={newInvoice.Amount}\n              onChange={handleOnChange}\n              autoComplete=\"off\"\n            />\n          </div>\n          <div className=\"input full-input\">\n            <label htmlFor=\"senderCountry\">Payment Date</label>\n            <input\n              type=\"date\"\n              id=\"senderCountry\"\n              name=\"PaymentDate\"\n              value={newInvoice.PaymentDate}\n              onChange={handleOnChange}\n              autoComplete=\"off\"\n            />\n          </div>\n        </div>\n      </form>\n      <div className=\"form-button-container\">\n        <button\n          type=\"button\"\n          className=\"btn btn-discard\"\n          onClick={handleShowForm}\n        >\n          Discard\n        </button>\n        <button\n          type=\"submit\"\n          className=\"btn btn-send\"\n          form=\"invoice-form\"\n          onClick={(e) => {\n            handleSubmit(e);\n          }}\n        >\n          Save & send\n        </button>\n      </div>\n    </section>\n  );\n};\n","import React from \"react\";\r\n\r\nexport const ColumnFilter = ({ column }) => {\r\n  const { filterValue, setFilter } = column;\r\n  return (\r\n    <span className=\"search-container\">\r\n      <input\r\n        value={filterValue || \"\"}\r\n        onChange={(e) => setFilter(e.target.value)}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n","// import { format } from \"date-fns\";\r\nimport { ColumnFilter } from \"./ColumnFilter\";\r\nimport moment from \"moment\";\r\n\r\nexport const PRODUCTS = [\r\n  {\r\n    Header: \"Id\",\r\n    Footer: \"Id\",\r\n    accessor: \"TransId\",\r\n    disableFilters: true,\r\n  },\r\n  {\r\n    Header: \"Customer Name\",\r\n    Footer: \"Customer Name\",\r\n    accessor: \"CustomerName\",\r\n  },\r\n  {\r\n    Header: \"DOB\",\r\n    Footer: \"DOB\",\r\n    accessor: \"DOB\",\r\n    Cell: ({ value }) => {\r\n      return moment(new Date(value)).format(\"DD/MM/YYYY\");\r\n    },\r\n  },\r\n\r\n  {\r\n    Header: \"Phone Number\",\r\n    Footer: \"Phone Number\",\r\n    accessor: \"Phone\",\r\n  },\r\n  {\r\n    Header: \"Product\",\r\n    Footer: \"Product\",\r\n    accessor: \"Product\",\r\n  },\r\n  {\r\n    Header: \"Amount Paid\",\r\n    Footer: \"Amount Paid\",\r\n    accessor: \"Amount\",\r\n  },\r\n  {\r\n    Header: \"Payment Date\",\r\n    Footer: \"Payment Date\",\r\n    accessor: \"PaymentDate\",\r\n    Cell: ({ value }) => {\r\n      return moment(new Date(value)).format(\"DD/MM/YYYY\");\r\n    },\r\n  },\r\n];\r\n","import React from \"react\";\r\n\r\nexport const Checkbox = React.forwardRef(({ indeterminate, ...rest }, ref) => {\r\n  const defaultRef = React.useRef();\r\n  const resolvedRef = ref || defaultRef;\r\n\r\n  React.useEffect(() => {\r\n    resolvedRef.current.indeterminate = indeterminate;\r\n  }, [resolvedRef, indeterminate]);\r\n\r\n  return (\r\n    <>\r\n      <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n    </>\r\n  );\r\n});\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GoToTop } from \"./GoToTop\";\r\nimport plus from \"./assets/svg/icon-plus.svg\";\r\nimport { Form } from \"./Form\";\r\nimport {\r\n  useTable,\r\n  useGlobalFilter,\r\n  useFilters,\r\n  usePagination,\r\n  useRowSelect,\r\n} from \"react-table\";\r\nimport { PRODUCTS } from \"../src/Columns/Products\";\r\nimport { ColumnFilter } from \"../src/Columns/ColumnFilter\";\r\nimport { Checkbox } from \"../src/Columns/Checkbox\";\r\nimport { GlobalFilter } from \"../src/Columns/GlobalFilter\";\r\n\r\nexport const ProductsTable = React.forwardRef((props, ref) => {\r\n  const [returnedProducts, setReturnedProducts] = useState(\"\");\r\n  //------------------------------------------------------------------------------------------------------------------------------------\r\n  const getProducts = async () => {\r\n    try {\r\n      const allProducts = await fetch(\"/api/products\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        },\r\n      }).then((res) => res.json());\r\n      setReturnedProducts(allProducts);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  console.log(returnedProducts);\r\n  //----------------------------------------------------------------------------------------------------------------------------------------------------------\r\n  const columns = useMemo(() => PRODUCTS, []);\r\n  const data = returnedProducts.name || [];\r\n  const defaultColumn = useMemo(() => {\r\n    return {\r\n      Filter: ColumnFilter,\r\n    };\r\n  });\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    headerGroups,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    selectedFlatRows,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    usePagination,\r\n    useRowSelect,\r\n    (hooks) => {\r\n      hooks.visibleColumns.push((columns) => {\r\n        return [\r\n          {\r\n            id: \"selection\",\r\n            Header: ({ getToggleAllRowsSelectedProps }) => (\r\n              <Checkbox {...getToggleAllRowsSelectedProps()} />\r\n            ),\r\n            Cell: ({ row }) => (\r\n              <Checkbox {...row.getToggleRowSelectedProps()} />\r\n            ),\r\n          },\r\n          ...columns,\r\n        ];\r\n      });\r\n    }\r\n  );\r\n  const { globalFilter, pageIndex, pageSize } = state;\r\n  return (\r\n    // <section className=\"invoices\">\r\n    <>\r\n      <div className=\"table-container\" ref={ref}>\r\n        <table {...getTableProps()} id=\"table-to-xls\">\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    {column.render(\"Header\")}\r\n                    {/* <div>\r\n                          {column.canFilter ? column.render(\"Filter\") : null}\r\n                        </div> */}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td\r\n                        {...cell.getCellProps()}\r\n                        onClick={() => console.log(cell.row.original.TransId)}\r\n                      >\r\n                        {cell.render(\"Cell\")}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"table-nav\">\r\n        <span>\r\n          Page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </span>\r\n        <span>\r\n          | Go to page:{\" \"}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const pageNumber = e.target.value\r\n                ? Number(e.target.value) - 1\r\n                : 0;\r\n              gotoPage(pageNumber);\r\n            }}\r\n            style={{ width: \"50px\" }}\r\n          />\r\n        </span>\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => setPageSize(Number(e.target.value))}\r\n        >\r\n          {[10, 25, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </button>\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          Previous\r\n        </button>\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          Next\r\n        </button>\r\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {\">>\"}\r\n        </button>\r\n      </div>\r\n    </>\r\n    // </section>\r\n  );\r\n});\r\n","import React, { useEffect, useState, useMemo, useRef } from \"react\";\nimport { GoToTop } from \"./GoToTop\";\nimport plus from \"./assets/svg/icon-plus.svg\";\nimport { Form } from \"./Form\";\nimport moment from \"moment\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { ProductsTable } from \"./ProductsTable\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\n\nexport const Transactions = ({ showForm, setShowForm }) => {\n  const [returnedProducts, setReturnedProducts] = useState(\"\");\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [deleteID, setDeleteID] = useState(0);\n  const [isPdf, setIsPdf] = useState(false);\n\n  //------------------------------------------------------------------------------------------------------------------------------------\n  const getProducts = async () => {\n    try {\n      const allProducts = await fetch(\"/api/products\", {\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n          Accept: \"application/json\",\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      }).then((res) => res.json());\n      setReturnedProducts(allProducts);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n\n  console.log(returnedProducts);\n  //----------------------------------------------------------------------------------------------------------------------------------------------------------\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const getId = (id) => {\n    returnedProducts.name &&\n      returnedProducts.name.find((item) => item.id === id);\n    setDeleteID(id);\n  };\n\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  const handleShowForm = (e) => {\n    setShowForm(!showForm);\n  };\n  return (\n    <section className=\"invoices\">\n      <Form\n        showForm={showForm}\n        setShowForm={setShowForm}\n        handleShowForm={handleShowForm}\n        getProducts={getProducts}\n      />\n      {showForm && (\n        <div\n          className=\"form-background\"\n          onClick={() => {\n            handleShowForm();\n          }}\n        ></div>\n      )}\n\n      {!isPdf && (\n        <>\n          <div className=\"invoices-header\">\n            <div className=\"invoice-length-wrapper\">\n              <h3>Transactions</h3>\n              {returnedProducts.name && (\n                <p>\n                  {returnedProducts.name.length > 1\n                    ? returnedProducts.name.length + \" transactions available\"\n                    : returnedProducts.name.length === 0\n                    ? \"0 transactions available\"\n                    : returnedProducts.name.length + \" transaction available\"}\n                </p>\n              )}\n            </div>\n\n            <div\n              className=\"new-invoice-container\"\n              onClick={() => {\n                handleShowForm();\n              }}\n            >\n              <div className=\"plus-circle\">\n                <img src={plus} alt=\"\" />\n              </div>\n              <button type=\"button\" className=\"new-invoice\">\n                New\n              </button>\n            </div>\n          </div>\n\n          {returnedProducts.name && returnedProducts.name.length > 0 && (\n            <div className=\"btn-generate-container\">\n              <button\n                onClick={() => {\n                  setIsPdf(!isPdf);\n                }}\n                className=\"btn-generate\"\n              >\n                Save to Device\n              </button>\n            </div>\n          )}\n        </>\n      )}\n      <section className=\"invoices-container-wrapper\">\n        {!isPdf &&\n          returnedProducts.name &&\n          returnedProducts.name.map((product) => {\n            const {\n              TransId,\n              CustomerName,\n              DOB,\n              Phone,\n              Product,\n              Amount,\n              PaymentDate,\n            } = product;\n            return (\n              <div\n                key={TransId}\n                className={\n                  isExpanded && TransId === deleteID\n                    ? \"invoices-container expanded-transactions\"\n                    : \"invoices-container\"\n                }\n                onClick={() => {\n                  getId(TransId);\n                  setIsExpanded(true);\n                }}\n              >\n                {isExpanded && deleteID !== TransId && (\n                  <>\n                    <div className=\"invoices-TransId-wrapper\">\n                      <h5>\n                        <span>#</span>\n                        {TransId}\n                      </h5>\n                    </div>\n\n                    <p>{CustomerName}</p>\n                    <p>{Product}</p>\n                    <h4>₦{Amount}</h4>\n                  </>\n                )}\n                {!isExpanded && (\n                  <>\n                    <div className=\"invoices-TransId-wrapper\">\n                      <h5>\n                        <span>#</span>\n                        {TransId}\n                      </h5>\n                    </div>\n\n                    <p>{CustomerName}</p>\n                    <p>{Product}</p>\n                    <h4>₦{Amount}</h4>\n                  </>\n                )}\n                {TransId === deleteID && isExpanded && (\n                  <div className=\"full-details\">\n                    <div className=\"item\">\n                      <h4>Name:</h4>\n                      <p>{CustomerName}</p>\n                    </div>\n                    <div className=\"item\">\n                      <h4>DOB:</h4>\n                      <p>{moment(new Date(DOB)).format(\"DD/MM/YYYY\")}</p>\n                    </div>\n                    <div className=\"item\">\n                      <h4>Phone:</h4>\n                      <p>{Phone}</p>\n                    </div>\n                    <div className=\"item\">\n                      <h4>Product:</h4>\n                      <p>{Product}</p>\n                    </div>\n                    <div className=\"item\">\n                      <h4>Payment Date:</h4>\n                      <p>\n                        {moment(new Date(PaymentDate)).format(\"DD/MM/YYYY\")}\n                      </p>\n                    </div>\n                    <div className=\"item\">\n                      <h4>Amount:</h4>\n                      <h3>₦ {Amount}</h3>\n                    </div>\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        {isPdf && (\n          <>\n            <ProductsTable ref={componentRef} />{\" \"}\n            <div className=\"btn-generate-container\">\n              <div\n                onClick={() => {\n                  setTimeout(() => {\n                    refreshPage();\n                  }, 500);\n                }}\n              >\n                <ReactHTMLTableToExcel\n                  id=\"test-table-xls-button\"\n                  className=\"download-table-xls-button btn-generate\"\n                  table=\"table-to-xls\"\n                  filename={\"Transactions\"}\n                  sheet={\"Transactions\"}\n                  buttonText=\"Save as Excel\"\n                />\n              </div>\n\n              <button\n                onClick={() => {\n                  handlePrint();\n                  setTimeout(() => {\n                    setIsPdf(false);\n                  }, 500);\n                }}\n                className=\"btn-generate btn-pdf\"\n              >\n                Save as PDF\n              </button>\n            </div>{\" \"}\n          </>\n        )}\n      </section>\n      <GoToTop />\n    </section>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"./helpers/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { TailSpin } from \"react-loader-spinner\";\r\nimport \"./Signup.css\";\r\n\r\nexport const UserLogin = () => {\r\n  const [returnedData, setReturnedData] = useState([]);\r\n  const { setAuthState } = useContext(AuthContext);\r\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\r\n  const [fieldErr, setFieldErr] = useState(false);\r\n  const [userLogin, setUserLogin] = useState({\r\n    Email: \"\",\r\n    SignOnName: \"\",\r\n    UserPassword: \"\",\r\n  });\r\n\r\n  let history = useHistory();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setUserLogin((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const newLogin = async () => {\r\n    try {\r\n      const newData = await fetch(\"/get_login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          ...userLogin,\r\n        }),\r\n      }).then((res) => res.json());\r\n\r\n      console.log(newData);\r\n      //storing our accessToken to the local storage if there is no error\r\n      if (newData.error) {\r\n        setFieldErr(true);\r\n        setTimeout(function () {\r\n          setFieldErr(false);\r\n        }, 4000);\r\n        setIsLoggingIn(false);\r\n      } else {\r\n        localStorage.setItem(\"accessToken\", newData);\r\n        setAuthState(true);\r\n        history.push(\"/\");\r\n      }\r\n      setReturnedData(newData);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    newLogin();\r\n  };\r\n\r\n  return (\r\n    <section className=\"user-validation\">\r\n      <section className=\"validation-header\">\r\n        <h2>Sign in to your account</h2>\r\n        {fieldErr && (\r\n          <p className=\"form-err animate__animated animate__shakeX\">\r\n            Username or Password is incorrect\r\n          </p>\r\n        )}\r\n      </section>\r\n      <section className=\"user-validation-wrapper\">\r\n        {/* <section className=\"input input-2\">\r\n          <label htmlFor=\"Email\">Email</label>\r\n          <input type=\"email\" name=\"Email\" id=\"Email\" onChange={handleChange} />\r\n        </section> */}\r\n        <section className=\"input input-2\">\r\n          <label htmlFor=\"SignOnName\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"SignOnName\"\r\n            id=\"SignOnName\"\r\n            onChange={handleChange}\r\n          />\r\n        </section>\r\n        <section className=\"input input-2\">\r\n          <label htmlFor=\"UserPassword\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"UserPassword\"\r\n            id=\"UserPassword\"\r\n            onChange={handleChange}\r\n          />\r\n        </section>\r\n        <button\r\n          className=\"btn-create\"\r\n          type=\"submit\"\r\n          onClick={(e) => {\r\n            setIsLoggingIn(true);\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          {isLoggingIn ? (\r\n            <TailSpin color=\"#FFF\" height={25} width={25} />\r\n          ) : (\r\n            \"Sign in\"\r\n          )}\r\n        </button>\r\n        <p className=\"redirect-login\">\r\n          Not a member yet? <Link to=\"/register\">sign-up here</Link>\r\n        </p>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"animate.css\";\r\nimport \"./Signup.css\";\r\nimport { TailSpin } from \"react-loader-spinner\";\r\n\r\nexport const UserValidation = () => {\r\n  const [returnedData, setReturnedData] = useState();\r\n  const [fieldErr, setFieldErr] = useState(false);\r\n  const [passErr, setPassErr] = useState(false);\r\n  const [emailErr, setEmailErr] = useState(false);\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n  const [userValidation, setUserValidation] = useState({\r\n    FirstName: \"\",\r\n    LastName: \"\",\r\n    Email: \"\",\r\n    SignOnName: \"\",\r\n    UserPassword: \"\",\r\n    // Action: 2,\r\n  });\r\n\r\n  let history = useHistory();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"Action\") {\r\n      setUserValidation((prevState) => ({\r\n        ...prevState,\r\n        [name]: parseInt(value),\r\n      }));\r\n      return;\r\n    }\r\n    setUserValidation((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const newUser = async () => {\r\n    if (\r\n      !userValidation.FirstName ||\r\n      !userValidation.Email ||\r\n      !userValidation.LastName ||\r\n      !userValidation.SignOnName ||\r\n      !userValidation.UserPassword\r\n    ) {\r\n      setFieldErr(true);\r\n      setIsRegistering(false);\r\n      setTimeout(function () {\r\n        setFieldErr(false);\r\n      }, 4000);\r\n      return;\r\n    }\r\n\r\n    if (userValidation.UserPassword !== confirmPassword) {\r\n      setPassErr(true);\r\n      setIsRegistering(false);\r\n      setTimeout(function () {\r\n        setPassErr(false);\r\n      }, 4000);\r\n      return;\r\n    }\r\n    const newData = await fetch(\"/create/validation\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        ...userValidation,\r\n      }),\r\n    }).then((res) => res.json());\r\n    setReturnedData(newData[0]);\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    newUser();\r\n  };\r\n\r\n  return (\r\n    <section className=\"user-validation\">\r\n      <section className=\"validation-header\">\r\n        {/* <h2>Create an account</h2> */}\r\n        <h2>Let's get you set up</h2>\r\n        {fieldErr && (\r\n          <p className=\"form-err animate__animated animate__shakeX\">\r\n            All fields must be filled\r\n          </p>\r\n        )}\r\n      </section>\r\n      <section className=\"user-validation-wrapper\">\r\n        <section className=\"double-input\">\r\n          <section className=\"input input-2\">\r\n            <label htmlFor=\"FirstName\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"FirstName\"\r\n              id=\"FirstName\"\r\n              onChange={handleChange}\r\n            />\r\n          </section>\r\n          <section className=\"input input-2\">\r\n            <label htmlFor=\"LastName\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"LastName\"\r\n              id=\"LastName\"\r\n              onChange={handleChange}\r\n            />\r\n          </section>\r\n        </section>\r\n        <section className=\"input input-2\">\r\n          <label htmlFor=\"Email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"Email\"\r\n            id=\"Email\"\r\n            onChange={handleChange}\r\n            onBlur={() => {\r\n              !userValidation.Email.includes(\"@\")\r\n                ? setEmailErr(true)\r\n                : setEmailErr(false);\r\n            }}\r\n          />\r\n        </section>\r\n        {emailErr && (\r\n          <p className=\"form-err animate__animated animate__shakeX\">\r\n            Invalid email, must include @ sign.\r\n          </p>\r\n        )}\r\n        <section className=\"input input-2\">\r\n          <label htmlFor=\"SignOnName\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"SignOnName\"\r\n            id=\"SignOnName\"\r\n            onChange={handleChange}\r\n          />\r\n        </section>\r\n        <section className=\"double-input\">\r\n          <section className=\"input input-2\">\r\n            <label htmlFor=\"UserPassword\">Password</label>\r\n            <input\r\n              type=\"Password\"\r\n              name=\"UserPassword\"\r\n              id=\"UserPassword\"\r\n              onChange={handleChange}\r\n            />\r\n          </section>\r\n          <section className=\"input input-2\">\r\n            <label htmlFor=\"ConfirmPassord\">Confirm Password</label>\r\n            <input\r\n              type=\"Password\"\r\n              name=\"ConfirmPassword\"\r\n              id=\"ConfirmPassword\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </section>\r\n        </section>\r\n        {passErr && (\r\n          <p className=\"form-err animate__animated animate__shakeX\">\r\n            Passwords do not match\r\n          </p>\r\n        )}\r\n        <button\r\n          type=\"submit\"\r\n          onClick={(e) => {\r\n            setIsRegistering(true);\r\n            handleSubmit(e);\r\n          }}\r\n          className=\"btn-create\"\r\n        >\r\n          {!isRegistering ? (\r\n            \"Create Account\"\r\n          ) : (\r\n            <TailSpin color=\"#FFF\" height={30} width={30} />\r\n          )}\r\n        </button>\r\n\r\n        <p className=\"redirect-login\">\r\n          Already have an account? <Link to=\"/login\">login here</Link>\r\n        </p>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport \"./Table.css\";\nimport \"./form.css\";\nimport \"./dark-mode.css\";\nimport { Header } from \"./Header\";\nimport { Transactions } from \"./Transactions\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useLocation,\n} from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { AuthContext } from \"./helpers/AuthContext\";\nimport { UserLogin } from \"./UserLogin\";\nimport { UserValidation } from \"./UserValidation\";\n\nfunction App() {\n  const [toggleMode, setToggleMode] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n  const [showProfile, setShowProfile] = useState(false);\n  const [signIn, setSignIn] = useState(false);\n  const [authState, setAuthState] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"accessToken\")) {\n      setAuthState(true);\n    }\n  }, []);\n\n  const location = useLocation();\n\n  toggleMode\n    ? document.body.classList.add(\"dark-mode\")\n    : document.body.classList.remove(\"dark-mode\");\n\n  showForm\n    ? document.body.classList.add(\"body-still\")\n    : document.body.classList.remove(\"body-still\");\n\n  // storing the current mode in the local Storage\n  const handleMode = () => {\n    document.body.classList.toggle(\"dark-mode\");\n    document.body.classList.contains(\"dark-mode\")\n      ? localStorage.setItem(\"darkMode\", \"enabled\")\n      : localStorage.setItem(\"darkMode\", \"disabled\");\n  };\n  return (\n    <AuthContext.Provider\n      value={{\n        authState,\n        setAuthState,\n        signIn,\n        setSignIn,\n      }}\n    >\n      <Header\n        handleMode={handleMode}\n        toggleMode={toggleMode}\n        setToggleMode={setToggleMode}\n        setShowProfile={setShowProfile}\n        showProfile={showProfile}\n      />\n      <TransitionGroup>\n        <CSSTransition timeout={200} classNames=\"fade\" key={location.key}>\n          <Switch location={location}>\n            <Route exact path=\"/\">\n              {authState ? (\n                <Transactions showForm={showForm} setShowForm={setShowForm} />\n              ) : (\n                <UserLogin />\n              )}\n            </Route>\n            <Route exact path=\"/login\" children={<UserLogin />} />\n            <Route exact path=\"/register\" children={<UserValidation />}></Route>\n          </Switch>\n        </CSSTransition>\n      </TransitionGroup>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Router>\n    <App />\n  </Router>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}